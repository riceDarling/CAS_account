<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.dao.AccountInputDao">

	<sql id="accountInputColumns">
		a.id AS "id",
		a.inputnum AS "inputnum",
		a.arrivalnum AS
		"arrivalnum",
		a.supplier AS "supplier",
		a.suppliernum AS "suppliernum",
		date_format(a.inputdate,'%Y-%c-%d') AS "inputdate",
		date_format(a.makeDate,'%Y-%c-%d') AS "makeDate",
		a.category AS
		"category",
		a.maker AS "maker",
		a.remarks AS "remarks",
		a.del_flag AS
		"delFlag"
	</sql>

	<select id="getById" parameterType="java.lang.String"
		resultType="com.account.entity.AccountInput">
		SELECT
		<include refid="accountInputColumns" />
		FROM account_input a
		WHERE a.id = #{id}
	</select>

	<select id="findList" parameterType="java.util.Map"
		resultType="com.account.entity.AccountInput">
		SELECT
		<include refid="accountInputColumns" />
		FROM account_input a
		where a.del_flag = '0'
		<if test="supplier != null and supplier != ''">
			AND a.supplier LIKE CONCAT('%',#{supplier},'%'
			)
		</if>
		<if test="beginDate != null and beginDate != ''">
			AND a.inputdate &gt;= #{beginDate}
		</if>

		<if test="endDate != null and endDate != ''">
			AND a.inputdate &lt;= #{endDate}
		</if>
		GROUP BY a.id ORDER BY a.inputdate DESC
	</select>

	<insert id="save" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.account.entity.AccountInput">
		INSERT INTO account_input(
		id,
		inputnum,
		arrivalnum,
		supplier,
		suppliernum,
		inputdate,
		makeDate,
		category,
		maker,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{inputnum},
		#{arrivalnum},
		#{supplier},
		#{suppliernum},
		#{inputdate},
		#{makeDate},
		#{category},
		#{maker},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update" parameterType="com.account.entity.AccountInput">
		UPDATE account_input SET
		inputnum = #{inputnum},
		arrivalnum=#{arrivalnum},
		supplier=#{supplier},
		suppliernum=#{suppliernum},
		inputdate = #{inputdate},
		makeDate=#{makeDate},
		category = #{category},
		maker = #{maker},
		remarks =
		#{remarks}
		WHERE id = #{id}
	</update>

	<update id="delete" parameterType="java.lang.String">
		UPDATE account_input SET
		del_flag = '1'
		WHERE id = #{id}
	</update>
	<select id="selectView" parameterType="java.lang.String"
		resultType="com.account.entity.AccountInput">
		SELECT
		<include refid="accountInputColumns" />
		,sum(b.quantity) as sumquantity,sum(b.num) as sumnum,sum(b.money) as
		summoney
		FROM
		account_input a ,account_input_detail b
		WHERE
		a.id=b.parent_Id
		and
		a.del_flag='0'
		<if test="supplier != null and supplier != ''">
			and a.supplier like CONCAT(CONCAT('%',#{supplier}),'%')
		</if>
		<if test='beginDate != null and beginDate != ""'>
			<![CDATA[and UNIX_TIMESTAMP(a.inputdate) >= UNIX_TIMESTAMP('${beginDate} 00:00:00')]]>
		</if>
		<if test='endDate != null and endDate != ""'>
			<![CDATA[and UNIX_TIMESTAMP(a.inputdate) <= UNIX_TIMESTAMP('${endDate} 23:59:59')]]>
		</if>
		GROUP BY a.id
		ORDER BY a.inputdate DESC
		<if test="paging != null">
			<include refid="com.account.dao.SqlFragment.paging" />
		</if>
		;
	</select>

	<select id="selectViewCount" parameterType="java.lang.String"
		resultType="int">
		SELECT count(id) from (
		SELECT
		<include refid="accountInputColumns" />
		,sum(b.quantity) as sumquantity,sum(b.num) as sumnum,sum(b.money) as
		summoney
		FROM
		account_input a ,account_input_detail b
		WHERE
		a.id=b.parent_Id
		and
		a.del_flag='0'
		<if test="supplier != null and supplier != ''">
			and a.supplier like CONCAT(CONCAT('%',#{supplier}),'%')
		</if>
		<if test='beginDate != null and beginDate != ""'>
			<![CDATA[and UNIX_TIMESTAMP(a.inputdate) >= UNIX_TIMESTAMP('${beginDate} 00:00:00')]]>
		</if>
		<if test='endDate != null and endDate != ""'>
			<![CDATA[and UNIX_TIMESTAMP(a.inputdate) <= UNIX_TIMESTAMP('${endDate} 23:59:59')]]>
		</if>
		GROUP BY a.id
		)as num
	</select>
</mapper>