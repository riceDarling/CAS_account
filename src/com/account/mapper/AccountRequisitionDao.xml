<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.dao.AccountRequisitionDao">
    
	<sql id="accountRequisitionColumns">
		a.id AS "id",
		a.ordernum AS "ordernum",
		a.title AS "title",
		a.receivedate AS "receivedate",
		a.reason AS "reason",
		a.office_id AS "office",
		a.proc_ins_id AS "procInsId",
		a.checker AS "checker",
		a.create_by AS "createBy",
		a.create_date AS "createDate",
		a.update_by AS "updateBy",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.act_checker AS "act_checker",
		requisitionDate,
		maker
	</sql>
	
	<select id="get" parameterType="string" resultType="com.account.entity.AccountRequisition">
		SELECT 
			<include refid="accountRequisitionColumns"/>
		FROM account_requisition a
	
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.account.entity.AccountRequisition" parameterType="com.account.entity.AccountRequisition">
		SELECT 
			<include refid="accountRequisitionColumns"/>
		FROM account_requisition a
		WHERE 
		a.del_flag = 0		
		<if test="title!=null and title!=''">
			AND a.title LIKE concat('%',#{title},'%')
		</if>
		<if test="procInsId!=null &amp;&amp; procInsId!=''">
			<if test='procInsId=="0"'>
				AND a.proc_ins_id!='end'	
			</if>
			<if test='procInsId=="1"'>
				AND a.proc_ins_id='end'
			</if>
		</if>
		<choose>
			<when test="page !=null ">
				
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
		ORDER BY a.create_date DESC
	</select>
	
	<select id="findAllList" resultType="com.account.entity.AccountRequisition" parameterType="com.account.entity.AccountRequisition">
		SELECT 
			<include refid="accountRequisitionColumns"/>
		FROM account_requisition a
		<where>
			a.del_flag = 0
		</where>		
		<choose>
			<when test="page !=null ">
				
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert" parameterType="com.account.entity.AccountRequisition">
		INSERT INTO 
			account_requisition
		set
			<if test='id != null and id != ""'>
				id = #{id}
			</if>
			<if test='ordernum != null and ordernum != ""'>
				,ordernum = #{ordernum}
			</if>
			<if test='title != null and title != ""'>
				,title = #{title}
			</if>
			<if test='receivedate != null and receivedate != ""'>
				,receivedate = #{receivedate}
			</if>
			<if test='reason != null and reason != ""'>
				,reason = #{reason}
			</if>
			<if test='office != null and office != ""'>
				,office_id = #{office}
			</if>
			<if test='procInsId != null and procInsId != ""'>
				,proc_ins_id = #{procInsId}
			</if>
			<if test='checker != null and checker != ""'>
				,checker = #{checker}
			</if>
			<if test='createBy != null and createBy != ""'>
				,create_by = #{createBy}
			</if>
			<if test='createDate != null and createDate != ""'>
				,create_date = #{createDate}
			</if>
			<if test='act_checker != null and act_checker != ""'>
				,act_checker = #{act_checker}
			</if>
			<if test='delFlag != null and delFlag != ""'>
				,del_flag = #{delFlag}
			</if>
			<if test='requisitionDate != null and requisitionDate != ""'>
				,requisitionDate = #{requisitionDate}
			</if>
			<if test='maker != null and maker != ""'>
				,maker = #{maker}
			</if>
			;
	</insert>
	
	<update id="update" parameterType="com.account.entity.AccountRequisition">
		UPDATE account_requisition SET 	
		    <if test="ordernum != null">
		  	 ordernum = #{ordernum},
		    </if>
			<if test="title != null">
			  title = #{title},
		    </if>
		    <if test="receivedate != null">
			  receivedate = #{receivedate},
		    </if>
			  <if test="reason != null">
			  reason = #{reason},
		    </if>
			 <if test="procInsId != null">
				proc_ins_id = #{procInsId},
		    </if>
			 <if test="checker != null">
				checker = #{checker},
		    </if>
		     <if test="requisitionDate != null">
				requisitionDate = #{requisitionDate},
		    </if>
		    <if test="maker != null">
				maker = #{maker},
		    </if>
		    act_checker=#{act_checker},
			update_by = #{updateBy},
			update_date = #{update}
		WHERE id = #{id}
	</update>
	
	<update id="delete" parameterType="string">
		UPDATE account_requisition SET 
			del_flag = 1
		WHERE id = #{id}
	</update>
	
	
	<select id="getDataByProcId" resultType="com.account.entity.AccountRequisition">
		SELECT 
			<include refid="accountRequisitionColumns"/>
		FROM account_requisition a
		WHERE a.proc_ins_id = #{procInsId}
	</select>
	
	<select id="selectRequisitionByOrdernum" resultType="com.account.entity.AccountRequisition">
		SELECT 
			<include refid="accountRequisitionColumns"/>
		FROM account_requisition a
		WHERE a.id = #{ordernum}
	</select>
	<select id="getAccountPurchaseTitle" resultType="com.account.entity.AccountRequisition">
		SELECT ap.title as title FROM account_requisition ap WHERE ap.proc_ins_id='end' and del_flag='0'
	</select>

	<select id="selectView" resultType="com.account.entity.AccountRequisition">
		SELECT 
			
			<include refid="accountRequisitionColumns"/>
			
		FROM 
			account_requisition a,
			account_requisition_act act
		where
			( a.del_flag = 0 or a.del_flag is null )
			and act.requisition_id = a.id
			<if test='title != null and title != ""'>
				and a.title  LIKE concat('%',#{title},'%')
			</if>
			<if test='procInsId != null and procInsId != ""'>
				<if test='procInsId =="1"'>
					and ( a.proc_ins_id = 'start' or a.proc_ins_id = 'rejected' or a.proc_ins_id = 'notcommit' )
					and act.state = 0
					and ( a.act_checker = #{checker} or a.act_checker is null )
				</if>
				<if test='procInsId =="2"'>
					and ( a.proc_ins_id = 'start' or a.proc_ins_id = 'rejected' )
					and act.state = 1
					and ( act.checker_name = #{checker} )
				</if>
				<if test='procInsId =="3"'>
					and ( a.proc_ins_id = 'end' )
					and ( act.checker_name = #{checker} )
				</if>
				<if test='procInsId =="4"'>
					and a.create_by = #{checker}
				</if>
				<if test='procInsId =="5"'>
					and ( a.proc_ins_id = 'rejected' )
					and ( a.act_checker = #{checker} or a.act_checker is null )
				</if>
			</if>
			<if test='startTime != null and startTime != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) >= UNIX_TIMESTAMP('${startTime} 00:00:00')]]>  	
			</if>
			<if test='endTime != null and endTime != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) <= UNIX_TIMESTAMP('${endTime} 23:59:59')]]>
			</if>
			<if test='procInsId != null and procInsId =="1"'>
				GROUP BY a.id
			</if>
			<if test='procInsId != null and procInsId =="2"'>
				GROUP BY a.id
			</if>
			<if test='procInsId != null and procInsId =="3"'>
				GROUP BY a.id
			</if>
			<if test='procInsId != null and procInsId =="4"'>
				GROUP BY a.id
			</if>
			<if test='procInsId != null and procInsId =="5"'>
				GROUP BY a.id
			</if>
			order by a.create_date desc
			<if test="paging != null">
	        	<include refid="com.account.dao.SqlFragment.paging" />
	      	</if>
	      	;
	</select>
	
	<select id="selectViewCount" resultType="int">
		SELECT 
			ifnull( count(DISTINCT a.id) , 0 )
		FROM 
			account_requisition a,
			account_requisition_act act
		where
			( a.del_flag = 0 or a.del_flag is null )
			and act.requisition_id = a.id
			<if test='title != null and title != ""'>
				and a.title  LIKE concat('%',#{title},'%')
			</if>
			<if test='procInsId != null and procInsId != ""'>
				<if test='procInsId =="1"'>
					and ( a.proc_ins_id = 'start' or a.proc_ins_id = 'rejected' or a.proc_ins_id = 'notcommit' )
					and act.state = 0
					and ( a.act_checker = #{checker} or a.act_checker is null )
				</if>
				<if test='procInsId =="2"'>
					and ( a.proc_ins_id = 'start' or a.proc_ins_id = 'rejected' )
					and act.state = 1
					and ( act.checker_name = #{checker} )
				</if>
				<if test='procInsId =="3"'>
					and ( a.proc_ins_id = 'end' )
					and ( act.checker_name = #{checker} )
				</if>
				<if test='procInsId =="4"'>
					and a.create_by = #{checker}
				</if>
				<if test='procInsId =="5"'>
					and ( a.proc_ins_id = 'rejected' )
					and ( a.act_checker = #{checker} or a.act_checker is null )
				</if>
			</if>
			<if test='startTime != null and startTime != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) >= UNIX_TIMESTAMP('${startTime} 00:00:00')]]>  	
			</if>
			<if test='endTime != null and endTime != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) <= UNIX_TIMESTAMP('${endTime} 23:59:59')]]>
			</if>
	      	;
	</select>
	
</mapper>