<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.dao.AccountContractDao">


	<sql id="accountContractColumns">
		a.id AS "id",
		a.contractnum AS "contractnum",
		a.papercontract AS "papercontract",
		a.contracttitle AS "contracttitle",
		a.purchasenum AS "purchasenum",
		a.supplierNum AS "supplierNum",
		a.supplieraccount AS "supplieraccount",
		a.openbank AS "openbank",
		a.phone AS "phone",
		a.address AS "address",
		a.maker AS "maker",
		a.caigouname AS "caigouname",
		date_format(a.create_date,'%Y-%c-%d')AS
		"createdate",
		a.file AS "file",
		a.status AS "status",
		a.remarks AS
		"remarks",
		a.del_flag AS "delFlag"
	</sql>


	<select id="getById" parameterType="java.lang.String"
		resultType="com.account.entity.AccountContract">
		SELECT
		<include refid="accountContractColumns" />
		,b.title as title
		FROM account_contract a ,account_inquiry b
		WHERE
		a.purchaseNum=b.orderNum and a.id = #{id}
	</select>

	<select id="findList" parameterType="java.util.Map"
		resultType="com.account.entity.AccountContract">
		SELECT
		<include refid="accountContractColumns" />
		, b.title as title,d.supplier as supplier,sum(c.money) as summoney
		FROM account_contract a ,account_inquiry b,account_contract_detail
		c,account_supplier d
		where
		a.purchaseNum=b.orderNum and a.id=c.parent_id
		AND a.supplierNum=d.supplierNum
		and a.del_flag = '0'

		<if test="purchasenumtitle != null and purchasenumtitle != ''">
			AND b.title LIKE CONCAT('%',#{purchasenumtitle},'%' )
		</if>
		<if test="contracttitle != null and contracttitle != ''">
			AND a.contracttitle LIKE CONCAT('%',#{contracttitle},'%' )
		</if>
		<if test="status != null and status != ''">
			AND a.status = #{status}
		</if>
		<if test="beginDate != null and beginDate != ''">
			AND a.create_date &gt;= #{beginDate}
		</if>

		<if test="endDate != null and endDate != ''">
			AND a.create_date &lt;= #{endDate}
		</if>
		group by a.id ORDER BY a.create_date DESC
	</select>

	<select id="getAllAccountContractInfo" resultType="com.account.entity.AccountContract">
		SELECT * FROM
		account_contract a WHERE a.`status`='0' and a.del_flag='0'
	</select>
	<insert id="save" parameterType="com.account.entity.AccountContract">
		INSERT INTO account_contract(
		id,
		contractnum,
		papercontract,
		contracttitle,
		purchasenum,
		supplierNum,
		supplieraccount,
		openbank,
		phone,
		address,
		maker,
		caigouname,
		create_date,
		file,
		status,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{contractnum},
		#{papercontract},
		#{contracttitle},
		#{purchasenum},
		#{supplierNum},
		#{supplieraccount},
		#{openbank},
		#{phone},
		#{address},
		#{maker},
		#{caigouname},
		#{createdate},
		#{file},
		#{status},
		#{remarks},
		#{delFlag}
		)
	</insert>
	<update id="updateContractStatus" parameterType="String">
		UPDATE
		account_contract a SET a.`status`='1'
		WHERE a.contractnum=#{id}
	</update>
	<update id="updateContractStatustwo" parameterType="String">
		UPDATE
		account_contract a SET a.`status`='0'
		WHERE a.contractnum=#{id}
	</update>
	<update id="delete" parameterType="java.lang.String">
		UPDATE account_contract SET
		del_flag = 1
		WHERE id = #{id}
	</update>
	<update id="update" parameterType="com.account.entity.AccountContract">
		UPDATE account_contract SET
		contractnum = #{contractnum},
		papercontract = #{papercontract},
		contracttitle = #{contracttitle},
		purchasenum = #{purchasenum},
		supplierNum = #{supplierNum},
		supplieraccount=#{supplieraccount},
		openbank=#{openbank},
		phone=#{phone},
		address=#{address},
		maker=#{maker},
		caigouname = #{caigouname},
		create_date =
		#{createdate},
		file = #{file},
		status = #{status},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<select id="findAllTitle" resultType="map">
		SELECT a.id,a.contractTitle,a.supplierNum,a.papercontract,a.contractnum,b.supplier
		FROM account_contract a LEFT JOIN account_supplier b ON a.supplierNum=b.supplierNum
	</select>

	<select id="selectView" parameterType="java.lang.String"
		resultType="com.account.entity.AccountContract">
		SELECT
		<include refid="accountContractColumns" />
		, b.title as title,d.supplier as supplier,sum(c.money) as summoney
		FROM account_contract a ,account_inquiry b,account_contract_detail
		c,account_supplier d
		where
		a.purchaseNum=b.orderNum and a.id=c.parent_id
		AND a.supplierNum=d.supplierNum
		and a.del_flag = '0'
		<if test="purchasenumtitle != null and purchasenumtitle != ''">
			AND b.title LIKE CONCAT('%',#{purchasenumtitle},'%' )
		</if>
		<if test="contracttitle != null and contracttitle != ''">
			AND a.contracttitle LIKE CONCAT('%',#{contracttitle},'%' )
		</if>
		<if test="status != null and status != ''">
			AND a.status = #{status}
		</if>
		<if test='beginDate != null and beginDate != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) >= UNIX_TIMESTAMP('${beginDate} 00:00:00')]]>
		</if>
		<if test='endDate != null and endDate != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) <= UNIX_TIMESTAMP('${endDate} 23:59:59')]]>
		</if>
		group by a.id ORDER BY a.create_date DESC
		<if test="paging != null">
			<include refid="com.account.dao.SqlFragment.paging" />
		</if>
		;
	</select>

	<select id="selectViewCount" parameterType="java.lang.String"
		resultType="int">
		SELECT count(id) from (
		SELECT
		<include refid="accountContractColumns" />
		, b.title as title,d.supplier as supplier,sum(c.money) as summoney
		FROM account_contract a ,account_inquiry b,account_contract_detail
		c,account_supplier d
		where
		a.purchaseNum=b.orderNum and a.id=c.parent_id
		AND a.supplierNum=d.supplierNum
		and a.del_flag = '0'
		<if test="purchasenumtitle != null and purchasenumtitle != ''">
			AND b.title LIKE CONCAT('%',#{purchasenumtitle},'%' )
		</if>
		<if test="contracttitle != null and contracttitle != ''">
			AND a.contracttitle LIKE CONCAT('%',#{contracttitle},'%' )
		</if>
		<if test="status != null and status != ''">
			AND a.status = #{status}
		</if>
		<if test='beginDate != null and beginDate != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) >= UNIX_TIMESTAMP('${beginDate} 00:00:00')]]>
		</if>
		<if test='endDate != null and endDate != ""'>
				<![CDATA[and UNIX_TIMESTAMP(a.create_date) <= UNIX_TIMESTAMP('${endDate} 23:59:59')]]>
		</if>
		group by a.id ) as num
	</select>
</mapper>